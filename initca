#!/usr/bin/env ruby

require "#{File.dirname(__FILE__)}/util.rb"

if ARGV.size < 1
  STDERR.puts "usage: #{$0} <CA Name>"
  exit(1)
end

check_no_ca

@common_name = ARGV[0]

csr = <<_EOF
{
  "CN": "#{@common_name}",
  "key": {
    "algo": "ecdsa",
    "size": 256
  },
  "names": [
    {
      "C": "#{@country}",
      "L": "#{@location}",
      "O": "#{@organization}"
    }
  ],
  "ca": {
    "expiry": "#{@expiration}"
  }
}
_EOF

output = ""
IO.popen(@cfssl_initca, "w+") do |p|
  p.write(csr)
  p.close_write
  p.each do |out|
    output += out
  end
end
values = JSON.parse(output)

values["config"] = <<_EOF
{
  "signing": {
    "default": {
      "expiry": "#{@expiration}"
    },
    "profiles": {
      "server": {
        "expiry": "#{@expiration}",
        "usages": ["signing","key encipherment","server auth"]
      },
      "client": {
        "expiry": "#{@expiration}",
        "usages": ["signing","key encipherment","client auth"]
      },
      "intermediate": {
        "expiry": "#{@expiration}",
        "usages": ["digital signature","cert sign","crl sign","signing"],
        "ca_constraint": {
          "is_ca": true,
          "max_path_len":0,
          "max_path_len_zero": true
        }
      }
    }
  }
}
_EOF

[["cert", "ca-cert.pem"], ["csr", "ca.csr"], ["key", "ca-key.pem"], ["config", "ca-config.json"]].each do |names|
  File.open("#{@cert_dir}/#{names[1]}", "w") do |file|
    file.print values[names[0]]
  end
end

