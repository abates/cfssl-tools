#!/usr/bin/env ruby

if ARGV.size < 1
  STDERR.puts "usage: #{$0} <server fqdn> [alt name] [alt name]..."
  exit(1)
end

require "json"

@pwd = Dir.pwd
@country = "US"
@organization = "Omeganetserv"
@common_name = ARGV[0]
@host = @common_name.split(/\./)[0]
if @host == @common_name
  @common_name = "#{@host}.home.omeganetserv.com"
end

@hosts = []
if ARGV.size > 1
  @hosts = ARGV[1..-1].map {|host| "\"#{host}\""}
end
@hosts.unshift("\"#{@common_name}\"")
@hosts.unshift("\"#{@host}\"")
@cfssl=[
  "/Users/abates/local/bin/cfssl",
  "gencert",
  "-config=../ca-config.json",
  "-ca=../ca-cert.pem",
  "-ca-key=../ca-key.pem",
  "-",
]

if Dir.exist?(@host)
  STDERR.puts "Dir #{@common_name} already exists. Remove it first"
  exit(2)
end

Dir.mkdir(@host)
Dir.chdir(@host)

output = ""
IO.popen(@cfssl, "w+") do |p|
  p.print <<_EOF
{
  "CN": "#{@common_name}",
  "hosts": [ #{@hosts.join(",")} ],
  "key": {
      "algo": "ecdsa",
      "size": 256
  },
  "names": [
      {
          "C":  "#{@country}",
          "O":  "#{@organization}"
      }
  ]
}
_EOF
  p.close_write
  p.each do |out|
    output += out
  end
end
values = JSON.parse(output)

[["csr", "cert.csr"], ["key", "key.pem"], ["cert", "cert.pem"]].each do |names|
  File.open(names[1], "w") do |file|
    file.print values[names[0]]
  end
end

Dir.chdir(@pwd)

