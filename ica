#!/usr/bin/env ruby

require "#{File.dirname(__FILE__)}/util.rb"

if ARGV.size < 1
  STDERR.puts "usage: #{$0} <Intermediate CA Name>"
  exit(1)
end

@pwd = Dir.pwd
@common_name = ARGV[0]

@ica_dir = "#{@cert_dir}/#{@common_name}"
if Dir.exist?(@ica_dir)
  STDERR.puts "Dir #{@common_name} already exists. Remove it first"
  exit(2)
end

Dir.mkdir(@ica_dir)
Dir.chdir(@ica_dir)

output = ""
IO.popen(@cfssl_initca, "w+") do |p|
  p.print <<_EOF
{
  "CN": "#{@common_name}",
  "key": {
    "algo": "ecdsa",
    "size": 256
  },
  "names": [
    {
      "C": "#{@country}",
      "L": "#{@location}",
      "O": "#{@organization}"
    }
  ],
  "ca": {
    "expiry": "#{@expiration}"
  }
}
_EOF

  p.close_write
  p.each do |out|
    output += out
  end
end
cert = JSON.parse(output)

cert["config"] = File.read("#{@cert_dir}/ca-config.json")

output = ""
IO.popen(@cfssl_sign, "w+") do |p|
  p.print cert["csr"]
  p.close_write
  p.each do |out|
    output += out
  end
end
values = JSON.parse(output)
cert["cert"] = values["cert"]

[["csr", "ca.csr"], ["key", "ca-key.pem"], ["cert", "ca-cert.pem"], ["config", "ca-config.json"]].each do |names|
  File.open(names[1], "w") do |file|
    file.print cert[names[0]]
  end
end

Dir.chdir(@pwd)
